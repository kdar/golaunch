// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package idletime

import "unsafe"
import "syscall"

var _ unsafe.Pointer

var (
	moduser32   = syscall.NewLazyDLL("user32.dll")
	modkernel32 = syscall.NewLazyDLL("kernel32.dll")

	procGetLastInputInfo = moduser32.NewProc("GetLastInputInfo")
	procGetTickCount     = modkernel32.NewProc("GetTickCount")
)

func getLastInputInfo(plii uintptr) (b bool, err error) {
	r0, _, e1 := syscall.Syscall(procGetLastInputInfo.Addr(), 1, uintptr(plii), 0, 0)
	b = r0 != 0
	if b == false {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func getTickCount() (i uint32) {
	r0, _, _ := syscall.Syscall(procGetTickCount.Addr(), 0, 0, 0, 0)
	i = uint32(r0)
	return
}
