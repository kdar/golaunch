// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package system

import "unsafe"
import "syscall"

var _ unsafe.Pointer

var (
	modmsi = syscall.NewLazyDLL("msi.dll")

	procMsiGetShortcutTargetW = modmsi.NewProc("MsiGetShortcutTargetW")
	procMsiGetComponentPathW  = modmsi.NewProc("MsiGetComponentPathW")
)

func MsiGetShortcutTarget(szShortcutTarget *uint16, szProductCode *uint16, szFeatureId *uint16, szComponentCode *uint16) (ret int, err error) {
	r0, _, e1 := syscall.Syscall6(procMsiGetShortcutTargetW.Addr(), 4, uintptr(unsafe.Pointer(szShortcutTarget)), uintptr(unsafe.Pointer(szProductCode)), uintptr(unsafe.Pointer(szFeatureId)), uintptr(unsafe.Pointer(szComponentCode)), 0, 0)
	ret = int(r0)
	if ret != 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func MsiGetComponentPath(szProduct *uint16, szComponent *uint16, lpPathBuf *uint16, pcchBuf *int) (ret int, err error) {
	r0, _, e1 := syscall.Syscall6(procMsiGetComponentPathW.Addr(), 4, uintptr(unsafe.Pointer(szProduct)), uintptr(unsafe.Pointer(szComponent)), uintptr(unsafe.Pointer(lpPathBuf)), uintptr(unsafe.Pointer(pcchBuf)), 0, 0)
	ret = int(r0)
	if ret > 32 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}
