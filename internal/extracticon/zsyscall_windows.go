// MACHINE GENERATED BY 'go generate' COMMAND; DO NOT EDIT

package extracticon

import "unsafe"
import "syscall"

var _ unsafe.Pointer

var (
	modshell32 = syscall.NewLazyDLL("shell32.dll")
	moduser32  = syscall.NewLazyDLL("user32.dll")
	modgdi32   = syscall.NewLazyDLL("gdi32.dll")

	procSHGetFileInfoW         = modshell32.NewProc("SHGetFileInfoW")
	procGetDC                  = moduser32.NewProc("GetDC")
	procReleaseDC              = moduser32.NewProc("ReleaseDC")
	procDeleteDC               = modgdi32.NewProc("DeleteDC")
	procDeleteObject           = modgdi32.NewProc("DeleteObject")
	procGetIconInfo            = moduser32.NewProc("GetIconInfo")
	procCreateCompatibleDC     = modgdi32.NewProc("CreateCompatibleDC")
	procCreateDIBSection       = modgdi32.NewProc("CreateDIBSection")
	procSelectObject           = modgdi32.NewProc("SelectObject")
	procDrawIconEx             = moduser32.NewProc("DrawIconEx")
	procExtractIconExW         = modshell32.NewProc("ExtractIconExW")
	procExtractAssociatedIconW = modshell32.NewProc("ExtractAssociatedIconW")
	procDestroyIcon            = moduser32.NewProc("DestroyIcon")
)

func shGetFileInfo(pszPath *uint16, dwFileAttributes uint32, psfi uintptr, cbFileInfo uint32, uFlags uint32) (i uintptr, err error) {
	r0, _, e1 := syscall.Syscall6(procSHGetFileInfoW.Addr(), 5, uintptr(unsafe.Pointer(pszPath)), uintptr(dwFileAttributes), uintptr(psfi), uintptr(cbFileInfo), uintptr(uFlags), 0)
	i = uintptr(r0)
	if i == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func getDC(hWnd Handle) (h Handle, err error) {
	r0, _, e1 := syscall.Syscall(procGetDC.Addr(), 1, uintptr(hWnd), 0, 0)
	h = Handle(r0)
	if h == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func releaseDC(hWnd Handle, hDC Handle) (ret int, err error) {
	r0, _, e1 := syscall.Syscall(procReleaseDC.Addr(), 2, uintptr(hWnd), uintptr(hDC), 0)
	ret = int(r0)
	if ret == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func deleteDC(hdc Handle) (b int, err error) {
	r0, _, e1 := syscall.Syscall(procDeleteDC.Addr(), 1, uintptr(hdc), 0, 0)
	b = int(r0)
	if b == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func deleteObject(hObject Handle) (b int, err error) {
	r0, _, e1 := syscall.Syscall(procDeleteObject.Addr(), 1, uintptr(hObject), 0, 0)
	b = int(r0)
	if b == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func getIconInfo(icon Handle, pinfo uintptr) (b int, err error) {
	r0, _, e1 := syscall.Syscall(procGetIconInfo.Addr(), 2, uintptr(icon), uintptr(pinfo), 0)
	b = int(r0)
	if b == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func createCompatibleDC(hdc Handle) (h Handle, err error) {
	r0, _, e1 := syscall.Syscall(procCreateCompatibleDC.Addr(), 1, uintptr(hdc), 0, 0)
	h = Handle(r0)
	if h == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func createDIBSection(hdc Handle, pbmih uintptr, iUsage uint32, ppvBits *unsafe.Pointer, hSection Handle, dwOffset uint32) (h Handle, err error) {
	r0, _, e1 := syscall.Syscall6(procCreateDIBSection.Addr(), 6, uintptr(hdc), uintptr(pbmih), uintptr(iUsage), uintptr(unsafe.Pointer(ppvBits)), uintptr(hSection), uintptr(dwOffset))
	h = Handle(r0)
	if h == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func selectObject(hdc Handle, hgdiobj Handle) (h Handle, err error) {
	r0, _, e1 := syscall.Syscall(procSelectObject.Addr(), 2, uintptr(hdc), uintptr(hgdiobj), 0)
	h = Handle(r0)
	if h == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func drawIconEx(hdc Handle, xLeft int32, yTop int32, hIcon Handle, cxWidth int32, cyWidth int32, istepIfAniCur uint32, hbrFlickerFreeDraw Handle, diFlags uint32) (b int, err error) {
	r0, _, e1 := syscall.Syscall9(procDrawIconEx.Addr(), 9, uintptr(hdc), uintptr(xLeft), uintptr(yTop), uintptr(hIcon), uintptr(cxWidth), uintptr(cyWidth), uintptr(istepIfAniCur), uintptr(hbrFlickerFreeDraw), uintptr(diFlags))
	b = int(r0)
	if b == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func extractIconEx(lpszFile *uint16, nIconIndex int, phiconLarge *Handle, phiconSmall *Handle, nIcons int) (i int, err error) {
	r0, _, e1 := syscall.Syscall6(procExtractIconExW.Addr(), 5, uintptr(unsafe.Pointer(lpszFile)), uintptr(nIconIndex), uintptr(unsafe.Pointer(phiconLarge)), uintptr(unsafe.Pointer(phiconSmall)), uintptr(nIcons), 0)
	i = int(r0)
	if i == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func extractAssociatedIcon(hInst Handle, lpIconPath *uint16, lpiIcon *uint16) (h Handle, err error) {
	r0, _, e1 := syscall.Syscall(procExtractAssociatedIconW.Addr(), 3, uintptr(hInst), uintptr(unsafe.Pointer(lpIconPath)), uintptr(unsafe.Pointer(lpiIcon)))
	h = Handle(r0)
	if h == 0 {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}

func destroyIcon(hIcon Handle) (b bool, err error) {
	r0, _, e1 := syscall.Syscall(procDestroyIcon.Addr(), 1, uintptr(hIcon), 0, 0)
	b = r0 != 0
	if b == false {
		if e1 != 0 {
			err = error(e1)
		} else {
			err = syscall.EINVAL
		}
	}
	return
}
