// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
*/
var flatapi = flatapi || {};

/**
 * @enum
 */
flatapi.RequestData = {
  NONE: 0,
  Query: 1
};

/**
 * @constructor
 */
flatapi.Query = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {flatapi.Query}
 */
flatapi.Query.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {flatapi.Query=} obj
 * @returns {flatapi.Query}
 */
flatapi.Query.getRootAsQuery = function(bb, obj) {
  return (obj || new flatapi.Query).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
flatapi.Query.prototype.query = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
flatapi.Query.startQuery = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} queryOffset
 */
flatapi.Query.addQuery = function(builder, queryOffset) {
  builder.addFieldOffset(0, queryOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
flatapi.Query.endQuery = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @constructor
 */
flatapi.Request = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {flatapi.Request}
 */
flatapi.Request.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {flatapi.Request=} obj
 * @returns {flatapi.Request}
 */
flatapi.Request.getRootAsRequest = function(bb, obj) {
  return (obj || new flatapi.Request).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array}
 */
flatapi.Request.prototype.id = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatapi.RequestData}
 */
flatapi.Request.prototype.dataType = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? /** @type {flatapi.RequestData} */ (this.bb.readUint8(this.bb_pos + offset)) : flatapi.RequestData.NONE;
};

/**
 * @param {flatbuffers.Table} obj
 * @returns {?flatbuffers.Table}
 */
flatapi.Request.prototype.data = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
flatapi.Request.startRequest = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} idOffset
 */
flatapi.Request.addId = function(builder, idOffset) {
  builder.addFieldOffset(0, idOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatapi.RequestData} dataType
 */
flatapi.Request.addDataType = function(builder, dataType) {
  builder.addFieldInt8(1, dataType, flatapi.RequestData.NONE);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} dataOffset
 */
flatapi.Request.addData = function(builder, dataOffset) {
  builder.addFieldOffset(2, dataOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
flatapi.Request.endRequest = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
flatapi.Request.finishRequestBuffer = function(builder, offset) {
  builder.finish(offset);
};

// Exports for Node.js and RequireJS
this.flatapi = flatapi;
